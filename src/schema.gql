# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AdminCompanyType {
  id: String!
  name: String!
}

type AdminUserType {
  id: String
  companyId: String
  name: String!
  email: String!
  roleList: [UserRoleType!]
  permissionList: [UserPermissionType!]
  status: Float!
}

type UserRoleType {
  id: String!
  name: String!
}

type UserPermissionType {
  id: String!
  code: String!
}

type AdminUserResponseType {
  internalCode: Float!
  message: String!
  qty: Float
  payload: [AdminUserType!]
}

type AuthDataResponseType {
  token: String!
  user: AdminUserType!
}

type AuthResponseType {
  internalCode: Float!
  message: String!
  payload: AuthDataResponseType
}

type SalesOrderType {
  id: String!
  code: String!
  companyId: String!
  userId: String!
  customerIdDoc: String
  customerName: String
  customerEmail: String
  customerPhone: String
  customerAddress: String
  comment: String
  price: Float!
  cost: Float!
  discount: Float
  discountPct: Float
  createdAt: String!
  status: Float!
  productList: [SalesOrderProductType!]
}

type SalesOrderProductType {
  id: String!
  qty: Float!
  comment: String
  name: String!
  code: String
  cost: Float!
  price: Float!
  discount: Float
  discountPct: Float
  status: Float
}

type SalesOrderResponseType {
  internalCode: Float!
  message: String!
  qty: Float
  payload: [SalesOrderType!]
}

type SalesProductType {
  id: String
  companyId: String!
  name: String!
  code: String
  description: String
  cost: Float!
  price: Float!
  type: Float!
  enable4Sale: Boolean!
}

type SalesProductResponseType {
  internalCode: Float!
  message: String!
  qty: Float
  payload: [SalesProductType!]
}

type PurchasesOrderType {
  id: String!
  code: Float!
  companyId: String!
  userId: String
  purchaseTypeId: String!
  documentTypeId: String
  providerIdDoc: String
  providerName: String
  providerEmail: String
  providerPhone: String
  providerAddress: String
  comment: String
  amount: Float!
  documentNumber: String
  createdAt: String!
  status: Float!
  productList: [PurchasesOrderProductType!]
}

type PurchasesOrderProductType {
  id: String!
  qty: Float!
  comment: String
  name: String!
  code: String
  cost: Float!
  amount: Float!
  status: Float
}

type PurchasesOrderResponseType {
  internalCode: Float!
  message: String!
  qty: Float
  payload: [PurchasesOrderType!]
}

type PurchasesProductType {
  id: String
  companyId: String!
  name: String!
  code: String
  description: String
  cost: Float!
  price: Float!
  type: Float!
  enable4Sale: Boolean!
}

type PurchasesProductResponseType {
  internalCode: Float!
  message: String!
  qty: Float
  payload: [PurchasesProductType!]
}

type PurchasesTypeType {
  id: String!
  companyId: String!
  name: String!
}

type PurchasesTypeResponseType {
  internalCode: Float!
  message: String!
  qty: Float
  payload: [PurchasesTypeType!]
}

type ProductsProductType {
  companyId: String
  id: String
  productCategoryId: String
  name: String!
  code: String
  description: String
  unit: String
  cost: Float!
  price: Float
  type: Float!
  enable4Sale: Boolean!
  elementList: [ProductsProductElementType!]
}

type ProductsProductElementType {
  element: ProductsProductType!
  qty: Float!
}

type ProductsProductResponseType {
  internalCode: Float!
  message: String!
  qty: Float
  payload: [ProductsProductType!]
}

type Query {
  authRevalidateToken: AuthResponseType!

  """Find all"""
  adminUserFind(page: Float, limit: Float, searchList: [String!]): AdminUserResponseType!

  """Find one by id"""
  adminUserFindOneById(value: String!): AdminUserResponseType!

  """Search all"""
  productsProductSearchByValues(page: Float, limit: Float, nameCode: String, productTypeList: [Float!], productCategoryId: String): ProductsProductResponseType!

  """Search all"""
  salesProductSearchByValues(page: Float, limit: Float, nameCodeList: [String!], enable4Sale: Boolean, productCategoryId: String): SalesProductResponseType!

  """Search all"""
  salesOrderSearchByValues(page: Float, limit: Float, createdAtInit: String, createdAtEnd: String, code: String, customerNameIdDoc: String, comment: String): SalesOrderResponseType!

  """Search all"""
  purchasesProductSearchByValues(page: Float, limit: Float, nameCodeList: [String!], productTypeList: [Float!], productCategoryId: String): PurchasesProductResponseType!

  """Search all"""
  purchasesOrderSearchByValues(page: Float, limit: Float, createdAtInit: String, createdAtEnd: String, code: String, providerNameIdDoc: String, comment: String): PurchasesOrderResponseType!

  """Search all"""
  purchasesTypeSearchByValues(page: Float, limit: Float, name: String): PurchasesTypeResponseType!
}

type Mutation {
  """Create/update user"""
  adminUserUpdate(user: AdminUserInput!): AdminUserResponseType!

  """Block user"""
  adminUserBlock(id: String!): AdminUserResponseType!

  """Create/update product"""
  productsProductUpdate(product: ProductsProductInput!): ProductsProductResponseType!

  """Delete product"""
  productsProductDelete(id: String!): ProductsProductResponseType!

  """Create/update order"""
  salesOrderUpdate(order: SalesOrderInput!): SalesOrderResponseType!

  """Create/update order"""
  purchasesOrderUpdate(order: PurchasesOrderInput!): PurchasesOrderResponseType!
}

input AdminUserInput {
  id: String
  companyId: String
  name: String!
  email: String!
  password: String!
  status: Float!
  roleList: [UserRoleInput!]
}

input UserRoleInput {
  id: String!
  name: String
}

input ProductsProductInput {
  companyId: String
  id: String
  productCategoryId: String
  name: String!
  code: String
  description: String
  unit: String
  cost: Float!
  price: Float
  type: Float!
  enable4Sale: Boolean!
  elementList: [ProductsProductElementInput!]
}

input ProductsProductElementInput {
  element: ProductsProductInput!
  qty: Float!
}

input SalesOrderInput {
  id: String
  code: String
  customerIdDoc: String
  customerName: String
  customerEmail: String
  customerPhone: String
  customerAddress: String
  comment: String
  discount: Float
  discountPct: Float
  status: Float
  productList: [SalesOrderProductInput!]
}

input SalesOrderProductInput {
  id: String!
  qty: Float!
  comment: String
  name: String!
  code: String
  cost: Float!
  price: Float!
  discount: Float
  discountPct: Float
  status: Float
}

input PurchasesOrderInput {
  id: String
  code: Float
  purchaseTypeId: String!
  documentTypeId: String
  providerIdDoc: String
  providerName: String
  providerEmail: String
  providerPhone: String
  providerAddress: String
  comment: String
  amount: Float
  documentNumber: String
  status: Float
  productList: [PurchasesOrderProductInput!]
}

input PurchasesOrderProductInput {
  id: String!
  qty: Float!
  comment: String
  name: String!
  code: String
  cost: Float!
  amount: Float!
  updateProductCost: Boolean!
  status: Float
}