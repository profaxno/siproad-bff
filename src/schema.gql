# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AdminCompanyType {
  id: String!
  name: String!
}

type AdminCompanyResponseType {
  internalCode: Float!
  message: String!
  qty: Float!
  payload: [AdminCompanyType!]
}

type AdminUserType {
  id: String
  companyId: String!
  name: String!
  email: String!
  roleList: [UserRoleType!]
  permissionList: [UserPermissionType!]
  status: Float!
}

type UserRoleType {
  id: String!
  name: String!
}

type UserPermissionType {
  id: String!
  code: String!
}

type AdminUserResponseType {
  internalCode: Float!
  message: String!
  qty: Float!
  payload: [AdminUserType!]
}

type ProductsElementType {
  id: String
  companyId: String!
  name: String!
  cost: Float!
  stock: Float!
  unit: String!
}

type ProductsElementResponseType {
  internalCode: Float!
  message: String!
  qty: Float!
  payload: [ProductsElementType!]
}

type ProductsFormulaType {
  id: String
  companyId: String!
  name: String!
  cost: Float!
  elementList: [ProductsFormulaElementType!]
}

type ProductsFormulaElementType {
  id: String!
  qty: Float!
  name: String!
  cost: Float!
  unit: String!
}

type ProductsFormulaResponseType {
  internalCode: Float!
  message: String!
  qty: Float!
  payload: [ProductsFormulaType!]
}

type ProductsProductType {
  id: String
  companyId: String!
  name: String!
  description: String
  cost: Float!
  price: Float!
  hasFormula: Boolean!
  elementList: [ProductsProductElementType!]
  formulaList: [ProductsProductFormulaType!]
}

type ProductsProductElementType {
  id: String!
  qty: Float!
  name: String!
  cost: Float!
  unit: String!
}

type ProductsProductFormulaType {
  id: String!
  qty: Float!
  name: String!
  cost: Float!
  elementList: [ProductsFormulaElementType!]
}

type ProductsProductResponseType {
  internalCode: Float!
  message: String!
  qty: Float!
  payload: [ProductsProductType!]
}

type AuthDataResponseType {
  token: String!
  user: AdminUserType!
}

type AuthResponseType {
  internalCode: Float!
  message: String!
  payload: AuthDataResponseType
}

type SalesOrderType {
  id: String!
  companyId: String!
  userId: String!
  comment: String
  price: Float!
  cost: Float!
  discount: Float
  discountPct: Float
  status: Float
  productList: [SalesOrderProductType!]
}

type SalesOrderProductType {
  id: String!
  qty: Float!
  comment: String
  name: String!
  cost: Float!
  price: Float!
  discount: Float
  discountPct: Float
  status: Float
}

type SalesOrderResponseType {
  internalCode: Float!
  message: String!
  qty: Float!
  payload: [SalesOrderType!]
}

type SalesProductType {
  id: String
  companyId: String!
  name: String!
  description: String
  cost: Float!
  price: Float!
  hasFormula: Boolean!
}

type SalesProductResponseType {
  internalCode: Float!
  message: String!
  qty: Float!
  payload: [SalesProductType!]
}

type Query {
  authRevalidateToken: AuthResponseType!

  """Find all"""
  adminCompanyFind(page: Float, limit: Float, searchList: [String!]): AdminCompanyResponseType!

  """Find one by id"""
  adminCompanyfindOneById(value: String!): AdminCompanyResponseType!

  """Find all"""
  adminUserFind(page: Float, limit: Float, searchList: [String!]): AdminUserResponseType!

  """Find one by id"""
  adminUserFindOneById(value: String!): AdminUserResponseType!

  """Find all"""
  productsElementFind(page: Float, limit: Float, searchList: [String!]): ProductsElementResponseType!

  """Find one by id"""
  productsElementfindOneById(value: String!): ProductsElementResponseType!

  """Find all"""
  productsFormulaFind(page: Float, limit: Float, searchList: [String!]): ProductsFormulaResponseType!

  """Find one by id"""
  productsFormulaFindOneById(value: String!): ProductsFormulaResponseType!

  """Find all"""
  productsProductFind(page: Float, limit: Float, searchList: [String!]): ProductsProductResponseType!

  """Find one by id"""
  productsProductFindOneById(value: String!): ProductsProductResponseType!

  """Find all"""
  salesProductFind(page: Float, limit: Float, searchList: [String!]): SalesProductResponseType!

  """Find one by id"""
  salesProductFindOneById(value: String!): SalesProductResponseType!

  """Find all"""
  salesOrderFind(page: Float, limit: Float, searchList: [String!]): SalesOrderResponseType!

  """Find one by id"""
  salesOrderFindOneById(value: String!): SalesOrderResponseType!
}

type Mutation {
  """Create/update company"""
  adminCompanyUpdate(company: AdminCompanyInput!): AdminCompanyResponseType!

  """Delete company"""
  adminCompanyDelete(id: String!): AdminCompanyResponseType!

  """Create/update user"""
  adminUserUpdate(user: AdminUserInput!): AdminUserResponseType!

  """Block user"""
  adminUserBlock(id: String!): AdminUserResponseType!

  """Create/update element"""
  productsElementUpdate(element: ProductsElementInput!): ProductsElementResponseType!

  """Delete element"""
  productsElementDelete(id: String!): ProductsElementResponseType!

  """Create/update formula"""
  productsFormulaUpdate(formula: ProductsFormulaInput!): ProductsFormulaResponseType!

  """Delete formula"""
  productsFormulaDelete(id: String!): ProductsFormulaResponseType!

  """Create/update product"""
  productsProductUpdate(product: ProductsProductInput!): ProductsProductResponseType!

  """Delete product"""
  productsProductDelete(id: String!): ProductsProductResponseType!

  """Create/update order"""
  salesOrderUpdate(order: SalesOrderInput!): SalesOrderResponseType!

  """Delete order"""
  salesOrderDelete(id: String!): SalesOrderResponseType!
}

input AdminCompanyInput {
  id: String
  name: String!
}

input AdminUserInput {
  id: String
  companyId: String!
  name: String!
  email: String!
  password: String!
  status: Float
  roleList: [UserRoleInput!]
}

input UserRoleInput {
  id: String!
  name: String
}

input ProductsElementInput {
  id: String
  companyId: String!
  name: String!
  cost: Float!
  stock: Float!
  unit: String!
}

input ProductsFormulaInput {
  id: String
  companyId: String!
  name: String!
  cost: Float!
  elementList: [ProductsFormulaElementInput!]
}

input ProductsFormulaElementInput {
  id: String!
  qty: Float!
  name: String
}

input ProductsProductInput {
  id: String
  companyId: String!
  name: String!
  description: String
  cost: Float!
  price: Float!
  hasFormula: Boolean!
  elementList: [ProductsProductElementInput!]
  formulaList: [ProductsProductFormulaInput!]
}

input ProductsProductElementInput {
  id: String!
  qty: Float!
  name: String
}

input ProductsProductFormulaInput {
  id: String!
  qty: Float!
  name: String
}

input SalesOrderInput {
  id: String
  comment: String
  discount: Float
  discountPct: Float
  status: Float
  productList: [SalesOrderProductInput!]
}

input SalesOrderProductInput {
  id: String!
  qty: Float!
  comment: String
  name: String!
  cost: Float!
  price: Float!
  discount: Float
  discountPct: Float
  status: Float
}