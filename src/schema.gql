# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AdminCompanyType {
  id: String
  companyId: String!
  name: String!
  cost: Float!
  stock: Float!
}

type AdminCompanyResponseType {
  internalCode: Float!
  message: String!
  qty: Float
  payload: [AdminCompanyType!]
}

type AdminUserType {
  id: String
  companyId: String!
  name: String!
  email: String!
  password: String!
  roleList: UserRoleDto
  permissionList: UserPermissionDto
  status: Float!
}

type UserRoleDto {
  id: String
}

type UserPermissionDto {
  id: String
  code: String
}

type AdminUserResponseType {
  internalCode: Float!
  message: String!
  qty: Float
  payload: [AdminUserType!]
}

type ProductsElementType {
  id: String
  companyId: String!
  name: String!
  cost: Float!
  stock: Float!
  unit: String!
}

type ProductsElementResponseType {
  internalCode: Float!
  message: String!
  qty: Float
  payload: [ProductsElementType!]
}

type ProductsFormulaType {
  id: String
  companyId: String!
  name: String!
  cost: Float!
  elementList: [ProductsFormulaElementType!]
}

type ProductsFormulaElementType {
  id: String!
  qty: Float!
  name: String!
  cost: Float!
  unit: String!
}

type ProductsFormulaResponseType {
  internalCode: Float!
  message: String!
  qty: Float
  payload: [ProductsFormulaType!]
}

type ProductsProductType {
  id: String
  companyId: String!
  name: String!
  description: String
  cost: Float!
  price: Float!
  hasFormula: Boolean!
  elementList: [ProductsProductElementType!]
  formulaList: [ProductsProductFormulaType!]
}

type ProductsProductElementType {
  id: String!
  qty: Float!
  name: String!
  cost: Float!
  unit: String!
}

type ProductsProductFormulaType {
  id: String!
  qty: Float!
  name: String!
  cost: Float!
  elementList: [ProductsFormulaElementType!]
}

type ProductsProductResponseType {
  internalCode: Float!
  message: String!
  qty: Float
  payload: [ProductsProductType!]
}

type AuthDataResponseType {
  token: String!
  user: AdminUserType!
}

type AuthResponseType {
  internalCode: Float!
  message: String!
  payload: AuthDataResponseType
}

type Query {
  """Find all"""
  findCompanies(page: Float, limit: Float, search: String, searchList: [String!]): AdminCompanyResponseType!

  """Find all by value"""
  findCompaniesByValue(value: String!): AdminCompanyResponseType!

  """Find all"""
  findUsers(page: Float, limit: Float, search: String, searchList: [String!]): AdminUserResponseType!

  """Find all by value"""
  findUsersByValue(value: String!): AdminUserResponseType!
  revalidateToken: AuthResponseType!

  """Find all"""
  findElements(page: Float, limit: Float, search: String, searchList: [String!]): ProductsElementResponseType!

  """Find all by value"""
  findElementsByValue(value: String!): ProductsElementResponseType!

  """Find all"""
  findFormulas(page: Float, limit: Float, search: String, searchList: [String!]): ProductsFormulaResponseType!

  """Find all by value"""
  findFormulasByValue(value: String!): ProductsFormulaResponseType!

  """Find all"""
  findProducts(page: Float, limit: Float, search: String, searchList: [String!]): ProductsProductResponseType!

  """Find all by value"""
  findProductsByValue(value: String!): ProductsProductResponseType!
}

type Mutation {
  """Create/Update company"""
  updateCompany(company: AdminCompanyInput!): AdminCompanyResponseType!

  """Delete company"""
  deleteCompany(id: String!): AdminCompanyResponseType!

  """Create/update user"""
  updateUser(user: AdminUserInput!): AdminUserResponseType!

  """Block user"""
  blockUser(id: String!): AdminUserResponseType!
  login(loginInput: LoginInput!): AuthResponseType!
  resetPassword(resetPasswordInput: ResetPasswordInput!): AuthResponseType!

  """Create/update element"""
  updateElement(element: ProductsElementInput!): ProductsElementResponseType!

  """Delete element"""
  deleteElement(id: String!): ProductsElementResponseType!

  """Create/update formula"""
  updateFormula(formula: ProductsFormulaInput!): ProductsFormulaResponseType!

  """Delete formula"""
  deleteFormula(id: String!): ProductsFormulaResponseType!

  """Create/update product"""
  updateProduct(product: ProductsProductInput!): ProductsProductResponseType!

  """Delete product"""
  deleteProduct(id: String!): ProductsProductResponseType!
}

input AdminCompanyInput {
  id: String
  companyId: String!
  name: String!
  cost: Float!
  stock: Float!
}

input AdminUserInput {
  id: String
  companyId: String!
  name: String!
  email: String!
  password: String!
  status: Float
}

input LoginInput {
  email: String!
  password: String!
}

input ResetPasswordInput {
  email: String!
  password: String!
}

input ProductsElementInput {
  id: String
  companyId: String!
  name: String!
  cost: Float!
  stock: Float!
  unit: String!
}

input ProductsFormulaInput {
  id: String
  companyId: String!
  name: String!
  cost: Float!
  elementList: [ProductsFormulaElementInput!]
}

input ProductsFormulaElementInput {
  id: String!
  qty: Float!
  name: String
}

input ProductsProductInput {
  id: String
  companyId: String!
  name: String!
  description: String
  cost: Float!
  price: Float!
  hasFormula: Boolean!
  elementList: [ProductsProductElementInput!]
  formulaList: [ProductsProductFormulaInput!]
}

input ProductsProductElementInput {
  id: String!
  qty: Float!
  name: String
}

input ProductsProductFormulaInput {
  id: String!
  qty: Float!
  name: String
}